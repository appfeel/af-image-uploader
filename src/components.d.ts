/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';


import {
  EventEmitter,
} from '@stencil/core';


export namespace Components {

  interface AfImageUploader {
    /**
    * The color when it is active
    */
    'activeColor': string;
    /**
    * The default color
    */
    'baseColor': string;
    /**
    * Obtains the selected or dropped file if any, or `undefined` if none available
    */
    'getFile': () => Promise<File>;
    /**
    * Height of the component
    */
    'height': string;
    /**
    * The hover outline color
    */
    'hoverOutlineColor': string;
    /**
    * Icon source image (svg, png, jpg, gif, ...)
    */
    'iconSrc': string;
    /**
    * The overlay color
    */
    'overlayColor': string;
    /**
    * Reset the component to void state
    */
    'reset': () => void;
    /**
    * Width of the component
    */
    'width': string;
  }
  interface AfImageUploaderAttributes extends StencilHTMLAttributes {
    /**
    * The color when it is active
    */
    'activeColor'?: string;
    /**
    * The default color
    */
    'baseColor'?: string;
    /**
    * Height of the component
    */
    'height'?: string;
    /**
    * The hover outline color
    */
    'hoverOutlineColor'?: string;
    /**
    * Icon source image (svg, png, jpg, gif, ...)
    */
    'iconSrc'?: string;
    /**
    * Raised when the upload has finished
    */
    'onChange'?: (event: CustomEvent<File>) => void;
    /**
    * Raised when the file tried to upload was in wrong format
    */
    'onInvalidformat'?: (event: CustomEvent<string>) => void;
    /**
    * Raised when the image has finished to load
    */
    'onLoad'?: (event: CustomEvent<File>) => void;
    /**
    * The overlay color
    */
    'overlayColor'?: string;
    /**
    * Width of the component
    */
    'width'?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    'AfImageUploader': Components.AfImageUploader;
  }

  interface StencilIntrinsicElements {
    'af-image-uploader': Components.AfImageUploaderAttributes;
  }


  interface HTMLAfImageUploaderElement extends Components.AfImageUploader, HTMLStencilElement {}
  var HTMLAfImageUploaderElement: {
    prototype: HTMLAfImageUploaderElement;
    new (): HTMLAfImageUploaderElement;
  };

  interface HTMLElementTagNameMap {
    'af-image-uploader': HTMLAfImageUploaderElement
  }

  interface ElementTagNameMap {
    'af-image-uploader': HTMLAfImageUploaderElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
